<Popup
    x:Class="Dynamo.Wpf.Views.GuidedTour.PopupWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Dynamo.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Dynamo.Wpf.Views.GuidedTour"
    xmlns:localui="clr-namespace:Dynamo.Wpf.UI.GuidedTour"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
    xmlns:ui="clr-namespace:Dynamo.UI"
    d:DesignHeight="{Binding MainWinHeight}"
    d:DesignWidth="{Binding MainWinWidth}"
    AllowsTransparency="True"
    Focusable="True"
    IsEnabled="True"
    IsOpen="False"
    PopupAnimation="Fade"
    PreviewKeyDown="Popup_KeyDown"
    mc:Ignorable="d">
    <Popup.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/Generic.xaml" />

            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <controls:PointsToPathConverter x:Key="PointsToPathConverter" />
        </ResourceDictionary>
    </Popup.Resources>

    <Canvas Name="RootLayout" Background="Transparent">

        <Path x:Name="PopupPathRectangle" Style="{StaticResource PoupPathRectangleStyle}">
            <Path.Data>
                <RectangleGeometry x:Name="BackgroundRectangle" />
            </Path.Data>
            <!--  This effect will show a 4px shadow of 20% of tranparency with a angle of 135 grades  -->
            <Path.Effect>
                <DropShadowEffect
                    BlurRadius="4"
                    Direction="135"
                    Opacity="0.2"
                    ShadowDepth="4"
                    Color="Black" />
            </Path.Effect>
        </Path>

        <Path x:Name="PopupPathRectangleShadow" Style="{StaticResource PoupPathRectangleStyle}">
            <Path.Data>
                <RectangleGeometry Rect="{Binding ElementName=BackgroundRectangle, Path=Rect}" />
            </Path.Data>
            <!--  This effect will show a 4px shadow of 20% of tranparency with a angle of 315 grades  -->
            <Path.Effect>
                <DropShadowEffect
                    BlurRadius="4"
                    Direction="315"
                    Opacity="0.2"
                    ShadowDepth="4"
                    Color="Black" />
            </Path.Effect>
        </Path>

        <!--  This Path will draw on the Canvas the pointer (a triangle) that will be available only for tooltips but for the Welcome popup will be hidden  -->
        <Path
            x:Name="TooltipPointer"
            Data="{Binding Path=TooltipPointerPoints, Converter={StaticResource PointsToPathConverter}}"
            Style="{StaticResource PoupPathPointerStyle}"
            Visibility="{Binding ShowPopupPointer, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Path.Effect>
                <DropShadowEffect
                    BlurRadius="4"
                    Direction="{Binding Path=ShadowTooltipDirection}"
                    Opacity="0.2"
                    ShadowDepth="4"
                    Color="Black" />
            </Path.Effect>
        </Path>

        <Grid
            x:Name="mainPopupGrid"
            Width="{Binding Width}"
            Height="{Binding Height}"
            MinWidth="480">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="50" />
            </Grid.RowDefinitions>

            <Grid
                x:Name="contentGrid"
                Grid.Row="0"
                DataContext="{Binding Step}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" MinHeight="50" />
                </Grid.RowDefinitions>

                <!--  This is the header/title section of the Popup  -->
                <Border
                    Grid.Row="0"
                    Margin="20,10,0,0"
                    BorderThickness="0,0,0,1">
                    <Border.BorderBrush>
                        <SolidColorBrush Opacity="0.3" Color="{StaticResource PopupTitleBorderColor}" />
                    </Border.BorderBrush>
                    <Grid x:Name="titleGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label
                            x:Name="TitleLabel"
                            Grid.Column="0"
                            VerticalContentAlignment="Center"
                            Content="{Binding StepContent.Title}"
                            Style="{StaticResource PoupTitleLabelStyle}" />
                        <Button
                            Name="CloseButton"
                            Grid.Column="1"
                            Width="12.8"
                            Height="12.8"
                            Click="CloseButton_Click"
                            Style="{StaticResource PopupCloseButtonStyle}" />
                    </Grid>
                </Border>

                <!--  This is the content (text/media) section of the Popup  -->
                <localui:CustomRichTextBox
                    x:Name="ContentRichTextBox"
                    Grid.Row="1"
                    Margin="20,14,20,5"
                    CustomText="{Binding StepContent.FormattedText}"
                    IsDocumentEnabled="True"
                    Style="{StaticResource CustomRichTextBoxStyle}" />
            </Grid>


            <Grid
                x:Name="bottomGrid"
                Grid.Row="1"
                Margin="0,10,0,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel
                    x:Name="TooltipNavigationControls"
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Visibility="{Binding ShowTooltipNavigationControls, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button
                        x:Name="BackButton"
                        Grid.Column="0"
                        Width="25"
                        Height="25"
                        Click="BackButton_Click"
                        Style="{StaticResource CaretButtonStyle}">
                        Back
                    </Button>
                    <Label
                        Name="TourProgress"
                        Grid.Column="1"
                        MaxWidth="80"
                        HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Content="{Binding TourLabelProgress}"
                        Style="{StaticResource PopupStepCounterFontStyle}" />

                    <Button
                        x:Name="NextButton"
                        Grid.Column="2"
                        Width="25"
                        Height="25"
                        Click="NextButton_Click"
                        Style="{StaticResource CaretButtonStyle}"
                        Tag="Invert">
                        Next
                    </Button>
                </StackPanel>
                <Button
                    Name="StartTourButton"
                    Grid.Column="3"
                    MinWidth="130"
                    Margin="0,0,10,0"
                    Padding="10,0,10,0"
                    Click="StartTourButton_Click"
                    Content="{x:Static p:Resources.StartTourButtonText}"
                    Style="{StaticResource PoupButtonStyle}"
                    Visibility="{Binding ShowPopupButton, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Grid>
        </Grid>
    </Canvas>
</Popup>
