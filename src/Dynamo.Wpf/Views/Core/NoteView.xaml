<UserControl
    x:Class="Dynamo.Nodes.NoteView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Dynamo.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Dynamo.Wpf.Properties"
    xmlns:ui="clr-namespace:Dynamo.UI"
    Canvas.Left="{Binding Left, Mode=TwoWay}"
    Canvas.Top="{Binding Top, Mode=TwoWay}"
    Width="Auto"
    Height="Auto"
    MinWidth="50"
    MinHeight="20"
    MaxWidth="300"
    d:DesignHeight="100"
    d:DesignWidth="200"
    MouseDown="OnNoteMouseDown"
    Visibility="{Binding IsCollapsed, Converter={StaticResource InverseBoolToVisibilityCollapsedConverter}}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/DynamoModern.xaml" />

                <ResourceDictionary>
                    <controls:NullToVisibiltyConverter x:Key="nullToVisibiltyConverter" />
                    <controls:NullToPinWidthConverter x:Key="nullToPinWidthConverter" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <UserControl.Style>
        <Style BasedOn="{StaticResource NoteUserControlStyle}" TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected, Mode=OneWay}" Value="True">
                    <Setter Property="Background" Value="LightBlue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected, Mode=OneWay}" Value="False">
                    <Setter Property="Background" Value="#EEE" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsOnEditMode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Background" Value="#EEE" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsOnEditMode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=IsOnEditMode, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                    <Setter Property="BorderThickness" Value="0" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Grid Name="BaseGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{Binding Path=PinnedNode, Converter={StaticResource nullToPinWidthConverter}, UpdateSourceTrigger=PropertyChanged}" />
        </Grid.RowDefinitions>
        <Grid.ContextMenu>
            <ContextMenu Width="200" Style="{StaticResource ContextMenuStyle}">
                <MenuItem
                    Name="deleteItem"
                    Click="OnDeleteItemClick"
                    Header="{x:Static p:Resources.NoteViewContextMenuDelete}" />
                <MenuItem
                    Name="editItem"
                    Click="OnEditItemClick"
                    Header="{x:Static p:Resources.NoteViewContextMenuEdit}" />
                <MenuItem
                    Name="createGroup_cm"
                    Command="{Binding Path=CreateGroupCommand}"
                    Header="{x:Static p:Resources.ContextCreateGroupFromSelection}" />
                <MenuItem
                    Name="addtoGroup"
                    Command="{Binding Path=AddToGroupCommand}"
                    Header="{x:Static p:Resources.ContextAddGroupFromSelection}" />
                <MenuItem
                    Name="unGroup_cm"
                    Command="{Binding Path=UngroupCommand}"
                    Header="{x:Static p:Resources.ContextUnGroupFromSelection}" />
                <MenuItem
                    Name="pinToNode"
                    Command="{Binding Path=PinToNodeCommand}"
                    Header="{x:Static p:Resources.ContextPinToNode}"
                    ToolTipService.ShowOnDisabled="True">
                    <MenuItem.ToolTip>
                        <ToolTip Content="{x:Static p:Resources.ContextPinToNodeTooltip}" Style="{StaticResource GenericToolTipLight}" />
                    </MenuItem.ToolTip>
                </MenuItem>
                <MenuItem
                    Name="UnpinToNode"
                    Command="{Binding Path=UnpinFromNodeCommand}"
                    Header="{x:Static p:Resources.ContextUnpinFromNode}"
                    ToolTipService.ShowOnDisabled="True">
                    <MenuItem.ToolTip>
                        <ToolTip Content="{x:Static p:Resources.UnpinNodeTooltip}" Style="{StaticResource GenericToolTipLight}" />
                    </MenuItem.ToolTip>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <Canvas Background="{x:Null}" />

        <TextBox
            Name="noteTextBox"
            Grid.Row="0"
            Grid.Column="0"
            AcceptsReturn="True"
            AcceptsTab="True"
            IsEnabled="{Binding Path=IsOnEditMode, Mode=OneWay}"
            LostFocus="noteTextBox_LostFocus"
            PreviewKeyDown="noteTextBox_PreviewKeyDown"
            Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <TextBox.Style>
                <Style BasedOn="{StaticResource NoteTextBoxStyle}" TargetType="TextBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsOnEditMode, Mode=OneWay}" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsOnEditMode, Mode=OneWay}" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <TextBlock
            Name="noteText"
            Grid.Row="0"
            Grid.Column="0"
            Text="{Binding Path=Text, Mode=OneWay}">
            <TextBlock.Style>
                <Style BasedOn="{StaticResource NoteTextBlockStyle}" TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, Mode=OneWay}" Value="False">
                            <Setter Property="Background" Value="#EEE" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Button
            Name="pinButton"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="0"
            Margin="3"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="{x:Null}"
            BorderThickness="0"
            Command="{Binding Path=UnpinFromNodeCommand}"
            Visibility="{Binding Path=PinnedNode, Converter={StaticResource nullToVisibiltyConverter}, UpdateSourceTrigger=PropertyChanged}">
            <Image Width="10" Source="/Dynamo.Wpf;component/UI/Images/Pin_NoBackground_16px.png" />
        </Button>
    </Grid>
</UserControl>
