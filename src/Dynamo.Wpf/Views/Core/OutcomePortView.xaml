<UserControl
    x:Class="Dynamo.Controls.OutcomePortView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:configuration="clr-namespace:Dynamo.Configuration;assembly=DynamoCore"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dynui="clr-namespace:Dynamo.UI.Controls"
    xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Dynamo.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="40"
    d:DesignWidth="40"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/DynamoConverters.xaml" />
                <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/Fonts.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid
        Name="MainGrid"
        MaxWidth="40"
        Margin="2,0,2,0"
        IsHitTestVisible="True">
        <Grid.RowDefinitions>
            <RowDefinition x:Name="PortNameRow" Height="auto" />
            <RowDefinition x:Name="ValueMarkerRow" Height="3px" />
            <RowDefinition x:Name="PortSnapingRow" Height="0" />

        </Grid.RowDefinitions>

        <interactivity:Interaction.Triggers>
            <!--  Bind Connect command to left click  -->
            <interactivity:EventTrigger EventName="MouseLeftButtonDown">
                <interactivity:InvokeCommandAction Command="{Binding Path=ConnectCommand}" />
            </interactivity:EventTrigger>
            <!--<interactivity:EventTrigger EventName="MouseRightButtonDown">
                <interactivity:InvokeCommandAction Command="{Binding Path=NodePortContextMenuCommand}" CommandParameter="{Binding}" />
            </interactivity:EventTrigger>-->
        </interactivity:Interaction.Triggers>
        <!--  Bind NodeAutoComplete to double left click  -->
        <!--<Grid.InputBindings>
            <MouseBinding Command="{Binding Path=NodeAutoCompleteCommand}" MouseAction="LeftDoubleClick" />
        </Grid.InputBindings>-->
        <!--  Sets the port background color  -->
        <Border
            x:Name="PortBackgroundBorder"
            Grid.Row="0"
            Grid.RowSpan="6"
            Background="{Binding PortBackgroundColor, UpdateSourceTrigger=PropertyChanged}"
            BorderBrush="{Binding PortBorderBrushColor, UpdateSourceTrigger=PropertyChanged}"
            BorderThickness="0"
            CornerRadius="3,3,0,0"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True" />
        <Grid
            Name="PortSnapingGrid"
            Grid.Row="2"
            Margin="0,0,0,-16"
            ClipToBounds="True">
            <Ellipse
                x:Name="port"
                Width="14"
                Height="14"
                Margin="0,-6,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Fill="{Binding PortValueMarkerColor, UpdateSourceTrigger=PropertyChanged}">
                <Ellipse.Style>
                    <Style TargetType="Ellipse">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Connected}" Value="true">
                                <DataTrigger.Setters />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Ellipse.Style>
            </Ellipse>
            <Viewbox
                Margin="0,4,0,0"
                VerticalAlignment="Top"
                Stretch="Uniform"
                StretchDirection="Both">
                <Grid Width="20" Height="20">

                    <Path
                        Width="8"
                        Height="4"
                        Margin="0,8,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Data="M 0 4 L 8 4 L 4 0 Z"
                        Fill="{Binding PortValueMarkerColor, UpdateSourceTrigger=PropertyChanged}">
                        <Path.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </Path.LayoutTransform>
                    </Path>


                </Grid>
            </Viewbox>

            <!--  Enables Port Snapping  -->
            <Rectangle
                x:Name="PortSnapping"
                Canvas.ZIndex="1"
                IsHitTestVisible="{Binding IsHitTestVisible}"
                SnapsToDevicePixels="True">
                <interactivity:Interaction.Triggers>
                    <interactivity:EventTrigger EventName="MouseEnter">
                        <interactivity:InvokeCommandAction Command="{Binding Path=MouseEnterCommand}" CommandParameter="{Binding}" />
                    </interactivity:EventTrigger>
                    <interactivity:EventTrigger EventName="MouseLeave">
                        <interactivity:InvokeCommandAction Command="{Binding Path=MouseLeaveCommand}" CommandParameter="{Binding}" />
                    </interactivity:EventTrigger>
                </interactivity:Interaction.Triggers>
            </Rectangle>
        </Grid>






        <!--  A rectangular marker indicating that the port has a default value  -->

        <!--  The name of this port  -->
        <TextBlock
            x:Name="PortNameTextBox"
            Grid.Row="0"
            Width="Auto"
            Margin="-30,3,-30,3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontFamily="{StaticResource ArtifaktElementRegular}"
            FontSize="12px"
            Foreground="#DCDCDC"
            IsHitTestVisible="False"
            Text="{Binding Path=PortName}"
            Visibility="Hidden" />

        <!--  A small marker on the left of the port, indicating whether it's been honored  -->

        <Rectangle
            x:Name="PortValueMarker"
            Grid.Row="1"
            VerticalAlignment="Stretch"
            Fill="{Binding PortValueMarkerColor, UpdateSourceTrigger=PropertyChanged}"
            IsHitTestVisible="False"
            SnapsToDevicePixels="True" />

        <!--  A semi-transparent border, which displays when the user's mouse moves over the port  -->
        <Border
            x:Name="BorderHighlightOverlay"
            Grid.Row="0"
            Grid.RowSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Opacity="0.2"
            SnapsToDevicePixels="True">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3,3,0,0" />
                    <Setter Property="BorderThickness" Value="1,1,1,0" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>

                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border.ToolTip>
                <dynui:DynamoToolTip AttachmentSide="Right" Style="{DynamicResource ResourceKey=SLightToolTip}">
                    <Grid>
                        <TextBlock
                            MaxWidth="320"
                            Text="{Binding Path=ToolTipContent}"
                            TextWrapping="Wrap" />
                    </Grid>
                </dynui:DynamoToolTip>
            </Border.ToolTip>

        </Border>


    </Grid>
</UserControl>
