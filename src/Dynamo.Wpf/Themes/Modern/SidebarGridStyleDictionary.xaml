<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="clr-namespace:Dynamo.UI">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/DynamoColorsAndBrushes.xaml" />
        <ResourceDictionary Source="/Dynamo.Wpf;component/Themes/Modern/DynamoConverters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Region Control Templates  -->

    <!--  Region LibraryView + LibrarySearchView  -->

    <ControlTemplate x:Key="LibraryThumbTemplate" TargetType="{x:Type Thumb}">
        <Grid>
            <Border
                x:Name="Rectangle1"
                Width="7"
                Height="Auto"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                Background="#aaaaaa"
                CornerRadius="2"
                Opacity="0.5" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LibraryScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid
            x:Name="Bg"
            Background="Transparent"
            SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*" />
            </Grid.RowDefinitions>
            <Track
                x:Name="PART_Track"
                IsDirectionReversed="true"
                IsEnabled="{TemplateBinding IsMouseOver}">
                <Track.Thumb>
                    <Thumb Template="{StaticResource LibraryThumbTemplate}" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LibraryScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                CanHorizontallyScroll="False"
                CanVerticallyScroll="True"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_VerticalScrollBar"
                Grid.Row="0"
                Grid.Column="1"
                Width="8"
                AutomationProperties.AutomationId="VerticalScrollBar"
                Cursor="Arrow"
                Maximum="{TemplateBinding ScrollableHeight}"
                Minimum="0"
                Style="{DynamicResource LibraryScrollBarStyle}"
                ViewportSize="{TemplateBinding ViewportHeight}"
                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="InCanvasThumbTemplate" TargetType="{x:Type Thumb}">
        <Border
            Width="Auto"
            Height="5"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="#aaaaaa"
            CornerRadius="3"
            Opacity="0.5" />
    </ControlTemplate>

    <ControlTemplate x:Key="InCanvasScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
            <Grid.LayoutTransform>
                <RotateTransform Angle="-90" />
            </Grid.LayoutTransform>

            <Track
                x:Name="PART_Track"
                Focusable="false"
                IsDirectionReversed="true">
                <Track.LayoutTransform>
                    <RotateTransform Angle="-90" />
                </Track.LayoutTransform>

                <Track.Thumb>
                    <Thumb x:Name="Thumb" Template="{StaticResource InCanvasThumbTemplate}" />
                </Track.Thumb>

            </Track>
        </Grid>

    </ControlTemplate>

    <ControlTemplate x:Key="InCanvasScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                Grid.RowSpan="2"
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar
                x:Name="PART_HorizontalScrollBar"
                Grid.Row="1"
                Width="Auto"
                AutomationProperties.AutomationId="HorizontalScrollBar"
                Maximum="{TemplateBinding ScrollableWidth}"
                Minimum="0.0"
                Orientation="Horizontal"
                Template="{StaticResource InCanvasScrollBarTemplate}"
                ViewportSize="{TemplateBinding ViewportWidth}"
                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LibraryToggleExpanderTemplate" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="ExpanderButtonBorder"
            Padding="{TemplateBinding Property=Padding}"
            Background="{TemplateBinding Property=Background}">
            <Grid
                Name="controlGrid"
                MinWidth="66"
                MinHeight="24">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Rectangle
                    x:Name="ExpandPath"
                    Width="1"
                    Height="5"
                    SnapsToDevicePixels="true"
                    Stroke="Black" />
                <Rectangle
                    Width="5"
                    Height="1"
                    SnapsToDevicePixels="true"
                    Stroke="Black" />
                <Image
                    x:Name="ExpandCollapseStateIcon"
                    Width="16"
                    Height="32"
                    VerticalAlignment="Center"
                    Source="pack://application:,,,/Dynamo.Wpf;component/Assets/Images/collapsestate_normal.png" />
                <TextBlock
                    x:Name="HeaderContent"
                    Grid.Column="1"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    Text="{Binding Name}"
                    TextBlock.FontSize="13"
                    TextBlock.Foreground="{StaticResource NestedMemberTextColor}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ExpandCollapseStateIcon" Property="Source" Value="pack://application:,,,/Dynamo.Wpf;component/Assets/Images/collapsestate_hover.png" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ExpandCollapseStateIcon" Property="Source" Value="pack://application:,,,/Dynamo.Wpf;component/Assets/Images/expandstate_hover.png" />
                    <Setter TargetName="HeaderContent" Property="TextBlock.FontWeight" Value="Semibold" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="ExpandCollapseStateIcon" Property="Source" Value="pack://application:,,,/Dynamo.Wpf;component/Assets/Images/expandstate_normal.png" />
                    <Setter TargetName="HeaderContent" Property="TextBlock.FontWeight" Value="Semibold" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="MemberTemplate">
        <StackPanel
            Name="ImageAndNodeName"
            Width="70"
            Height="70"
            Margin="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Orientation="Vertical">
            <StackPanel Visibility="{Binding Path=AutoCompletionNodeMachineLearningInfo.DisplayIcon, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock
                    MinWidth="25"
                    MaxWidth="33"
                    Margin="5,12,0,0"
                    HorizontalAlignment="Center"
                    FontSize="11"
                    Foreground="{StaticResource DynamoStandardLabelTextBrush}"
                    Text="{Binding AutoCompletionNodeMachineLearningInfo.ConfidenceScore, StringFormat={}{0} %, Mode=OneWay, Converter={StaticResource ConfidenceScoreFormattingConverter}}"
                    Visibility="{Binding Path=AutoCompletionNodeMachineLearningInfo.IsByRecommendation, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <Image
                    Width="14"
                    Height="14"
                    Margin="7,10,8,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Source="pack://application:,,,/Dynamo.Wpf;component/Assets/Images/clock-icon.png"
                    Visibility="{Binding Path=AutoCompletionNodeMachineLearningInfo.IsByUse, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </StackPanel>
            <Image
                Width="24"
                Height="36"
                Margin="2,0,16,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Source="{Binding SmallIcon}" />
            <Grid Margin="0,0,0,0">
                <Rectangle
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Fill="#3E464C">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource SearchHighlightMarginConverter}">
                            <Binding ElementName="memberName" />
                            <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" />
                        </MultiBinding>
                    </Rectangle.Margin>
                </Rectangle>
                <TextBlock
                    Name="memberName"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="13">
                    <Run Foreground="{StaticResource CommonSidebarTextColor}" Text="{Binding Name, Mode=OneWay}" />
                    <Run Foreground="#808285" Text="{Binding Parameters, Mode=OneWay}" />
                </TextBlock>
            </Grid>
        </StackPanel>

    </DataTemplate>

    <!--  EndRegion  -->

    <!--  EndRegion  -->

    <!--  Region Styles  -->

    <!--  Region LibraryView + LibrarySearchView  -->

    <!--  Hide scrollbar, when mouse is not over.  -->
    <Style x:Key="LibraryScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InCanvasScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LibraryScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template" Value="{StaticResource LibraryScrollBarTemplate}" />
    </Style>

    <Style x:Key="LibraryExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource AncestorType=Grid}}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource LibraryToggleExpanderTemplate}" />
    </Style>

    <Style x:Key="ListBoxMemberGroupsStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Background" Value="{StaticResource LibraryCommonBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Style for every member in found MemberGroup  -->
    <Style x:Key="MemberGroupMemberStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="{StaticResource LibraryCommonBackground}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Visibility" Value="{Binding Path=Visibility, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LibraryMemberOnHover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource LibraryMemberOnHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  EndRegion  -->

    <!--  EndRegion  -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
</ResourceDictionary>
